{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Motorola 68000",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "constant.numeric",
				"match": "#((\\$([A-Fa-f0-9]+)|\\d+|(%[01]+)))"
			},
			{
				"name": "meta.preprocessor.numeric",
				"match": "((\\$([A-Fa-f0-9]+)|\\-?\\+?\\d+|(%[01]+)))"
			},
			{
				"name": "meta.preprocessor",
				"match": "(?i)\\b_(year|month|(week)?day|(hour|minute|second)s)\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\b(e(qu(s|r)?|ven|nd(m|case|if|r|w)?)|=|set)\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\bm(acros?|exit)\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\bd((cb?|s)(\\.(b|w|l))?|o)\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\bc(nop|ase)\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\bi(f|nc(lude|bin)|nstr|nform)\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\bo(rg|bj(end)?|pt|ver|ffset)\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\b(r(ef|s(((re)?set)|(\\.(b|w|l))?)))\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\b(p((ush|op)(p|s)))\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\bs((ubstr|tr(len|cmp)|hift|ize|ect))\\b"
			},
			{
				"name": "meta.tag",
				"match": "(?i)\\b(l(ocal|ist)|until|n(olist|arg)|while|rept|group|bss|word|file)\\b"
			},
			{
				"name": "keyword.operator",
				"match": "\\+|-|\\*|\\\\|(<|>)=?|>>|<<|<>|\\%|\\||\\^|\\~"
			},
			{
				"name": "variable.language",
				"match": "(?i)\\b((d|a)[0-7]|pc|sp|usp|ccr)\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(a(bcd(\\.b)?|nd(i)?(\\.(b|w|l))?|dd((i|q|x)(\\.(b|w|l))?|(a)(\\.(w|l))?)?|(sl|sr)(\\.(b|w|l))?))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(b(((h(i|s)|l(s|o|t|e)|cc|ne|eq|v(c|s)|pl|mi|g(e|t)|ra|sr))(\\.(b|w|s|l))?|(c(hg|lr)|set|tst)(\\.(b|l))?))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(c(hk(\\.w)?|mp((i|m)?(\\.(b|w|l))?|a(\\.(w|l))?)))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(d(b(h(i|s)|l(s|o|t|e)|c(c|s)|ne|eq|v(c|s)|pl|mi|g(e|t)|ra)(\\.(b|w|s|l))?|iv(s|u)(\\.w)?))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(e(ori?(\\.(b|w|l))?|x(g(\\.l)?|t(\\.(w|l))?)))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\billegal\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(j(mp|sr))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(l(ea(\\.l)?|(s(l|r))(\\.(b|w|l))?))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(m(ove((\\.(b|w|l))|(a|m|p)(\\.(w|l))?|q(\\.l)?)?|ul(u|s)(\\.w)?))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(n(bcd(\\.b)?|egx?(\\.(b|w|l))?|o(p|t(\\.(b|w|l))?)))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(pea(\\.l)?)\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(r(eset|ox?(l|r)(\\.(b|w|l))?|t(e|r|s)))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(s(bcd(\\.b)?|(f|t|h(i|s)|l(s|o|t|e)|c(c|s)|ne|eq|v(c|s)|pl|mi|g(e|t))(\\.b)?|top|ub((i|q|x)?(\\.(b|w|l))?|(a)(\\.(w|l)?))|wap(\\.w)?))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\b(t(as(\\.b)?|rapv?|st(\\.(b|w|l))?))\\b"
			},
			{
				"name": "keyword",
				"match": "(?i)\\bunlk\\b"
			},
			{
				"name": "entity.name",
				"match": "(?i)(((@|\\.)[A-Za-z0-9_.]+)|([_A-Za-z][A-Za-z0-9._]*))"
			}
		]
		},
		"strings": {
			"name": "string.quoted.double.asm68k",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
					"name": "constant.character.escape.asm68k",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.asm68k"
}